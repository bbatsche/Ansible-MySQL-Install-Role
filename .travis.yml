---
sudo: required
dist: trusty

services:
  - docker

language: generic
cache:
  directories:
    - vendor/bundle
    - $HOME/.cache/pip

env:
  - ANSIBLE_VERSION="2.1"
  - ANSIBLE_VERSION="2.2"
  - ANSIBLE_VERSION="2.3"
  - ANSIBLE_VERSION="2.4"
  - ANSIBLE_VERSION="2.1" INSTALL=mysql
  - ANSIBLE_VERSION="2.2" INSTALL=mysql
  - ANSIBLE_VERSION="2.3" INSTALL=mysql
  - ANSIBLE_VERSION="2.4" INSTALL=mysql
  - ANSIBLE_VERSION="2.1" INSTALL=mariadb
  - ANSIBLE_VERSION="2.2" INSTALL=mariadb
  - ANSIBLE_VERSION="2.3" INSTALL=mariadb
  - ANSIBLE_VERSION="2.4" INSTALL=mariadb
  - ANSIBLE_VERSION="2.1" INSTALL=percona
  - ANSIBLE_VERSION="2.2" INSTALL=percona
  - ANSIBLE_VERSION="2.3" INSTALL=percona
  - ANSIBLE_VERSION="2.4" INSTALL=percona

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y -o Dpkg::Options::="--force-confold" docker-ce

  - docker pull ubuntu:trusty
  - docker pull ubuntu:xenial

  - travis_retry bundle install

install:
  - travis_retry sudo -H pip install ansible==${ANSIBLE_VERSION}.*

  - travis_retry sudo ansible-galaxy install bbatsche.Base

  - mkdir -p $HOME/.ansible
  - sudo chown -R $USER:$USER $HOME/.ansible

  - travis_wait rake environment:provision

script:
  # Syntax check
  - if [[ -n "$INSTALL" ]]; then ansible-playbook travis-playbook.yml --syntax-check; fi

  # Play test
  - if [[ -n "$INSTALL" ]]; then rake ansible:playbook[travis-playbook.yml]; fi

  # Idempotence test
  - > if [[ -n "$INSTALL" ]]; then
    rake ansible:playbook[travis-playbook.yml] | grep -q "changed=0.*failed=0"
    && (echo "Idempotence test: pass" && exit 0) || (echo "Idempotence test: fail" && cat idempotence.out && exit 1);
    fi

  # Serverspec
  - if [[ -z "$INSTALL" ]]; then rake spec; fi

after_script:
  - rake environment:destroy

notifications:
    webhooks: https://galaxy.ansible.com/api/v1/notifications/
