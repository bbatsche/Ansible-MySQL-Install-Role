---
sudo: required

services:
  - docker

language: generic
cache:
  directories:
    - vendor/bundle
    - $HOME/.cache/pip
    - $HOME/.local
    - roles

env:
  # Just run all the specs
  - ANSIBLE_VERSION="2.4" TEST_SUITE=trusty
  - ANSIBLE_VERSION="2.5" TEST_SUITE=trusty
  - ANSIBLE_VERSION="2.4" TEST_SUITE=xenial
  - ANSIBLE_VERSION="2.5" TEST_SUITE=xenial
  - ANSIBLE_VERSION="2.4" TEST_SUITE=bionic
  - ANSIBLE_VERSION="2.5" TEST_SUITE=bionic

  # Idempotence test for MySQL
  - ANSIBLE_VERSION="2.4" TEST_SUITE=idempotence INSTALL=mysql
  - ANSIBLE_VERSION="2.5" TEST_SUITE=idempotence INSTALL=mysql

  # Idempotence test for MariaDB
  - ANSIBLE_VERSION="2.4" TEST_SUITE=idempotence INSTALL=mariadb
  - ANSIBLE_VERSION="2.5" TEST_SUITE=idempotence INSTALL=mariadb

  # Idempotence test for Percona
  - ANSIBLE_VERSION="2.4" TEST_SUITE=idempotence INSTALL=percona
  - ANSIBLE_VERSION="2.5" TEST_SUITE=idempotence INSTALL=percona

before_install:
  - if [ $TEST_SUITE = "idempotence" -o $TEST_SUITE = "trusty" ]; then docker pull ubuntu:trusty; fi
  - if [ $TEST_SUITE = "idempotence" -o $TEST_SUITE = "xenial" ]; then docker pull ubuntu:xenial; fi
  - if [ $TEST_SUITE = "idempotence" -o $TEST_SUITE = "bionic" ]; then docker pull ubuntu:bionic; fi

  - travis_retry bundle install --deployment

install:
  - travis_retry pip install --user -U ansible==${ANSIBLE_VERSION}.*

  - travis_retry ansible-galaxy install bbatsche.Base

  - mkdir -p $HOME/.ansible
  - sudo chown -R $USER:$USER $HOME/.ansible

  - if [ $TEST_SUITE = "idempotence" ]; then travis_wait bundle exec rake environment:provision; fi
  - if [ $TEST_SUITE != "idempotence" ]; then travis_wait bundle exec rake environment:${TEST_SUITE}:provision; fi

script:
  # Syntax check
  - if [ $TEST_SUITE = "idempotence" ]; then ansible-playbook travis-playbook.yml --syntax-check; fi

  # Play test
  - if [ $TEST_SUITE = "idempotence" ]; then bundle exec rake ansible:playbook[travis-playbook.yml]; fi

  # Idempotence test
  - if [ $TEST_SUITE = "idempotence" ]; then bundle exec rake ansible:playbook[travis-playbook.yml] > idempotence.out; fi
  - >
    if [ $TEST_SUITE = "idempotence" ]; then
    grep -q "changed=0.*failed=0" idempotence.out
    && (echo "Idempotence test: pass" && exit 0) || (echo "Idempotence test: fail" && cat idempotence.out && exit 1);
    fi

  # Serverspec
  - if [ $TEST_SUITE != "idempotence" ]; then bundle exec rake spec:$TEST_SUITE; fi

after_script:
  - bundle exec rake environment:destroy

notifications:
    webhooks: https://galaxy.ansible.com/api/v1/notifications/
